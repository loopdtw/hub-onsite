'use strict';
var fs = require('fs');
var bunyan = require('bunyan');
var bformat = require('bunyan-format');
var formatOut = bformat({
    outputMode: 'long'
});
var bunyanLumberjackStream = require('bunyan-lumberjack');
var bunyanRequest = require('bunyan-request');

var ELK_LOG = process.env.ELK_LOG;

var logStreams = [{
    level: process.env.LOG_LEVEL || 'info',
    stream: formatOut
}];

var elkStream = {};

if (!ELK_LOG) {
    setTimeout(function(){
        console.log('==============No need to export logs!==============');
    }, 5000);
} else {
    elkStream.level = process.env.LOG_LEVEL || 'info';
    elkStream.type = 'raw';
    elkStream.stream = bunyanLumberjackStream({
        tlsOptions: {
            host: 'elk-1.loopd.com',
            port: 5000,
            ca: [fs.readFileSync(__dirname + '/logstash-forwarder.crt', {
                encoding: 'utf-8'
            })]
        }
    });
    elkStream.stream.on('connect', function() {
        console.log('Logstash Connected!');
    });
    elkStream.stream.on('dropped', function(count) {
        console.log('Logstash ERROR: Dropped ' + count + ' messages!');
    });
    elkStream.stream.on('disconnect', function(err) {
        console.log('Logstash WARN : Disconnected', err);
    });
    logStreams.push(elkStream);
}

bunyan.DISABLE = 70;

var logger = bunyan.createLogger({
    name: process.env.LOG_TAG || 'unknown',
    env: process.env.NODE_ENV || 'unknown',
    streams: logStreams
});

var logRequestMiddleware = bunyanRequest({
    logger: logger,
    headerName: 'x-request-id'
});

module.exports.logger = logger;
module.exports.logRequestMiddleware = logRequestMiddleware;
